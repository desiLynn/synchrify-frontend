{"ast":null,"code":"var _jsxFileName = \"/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/routes/Routes.js\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n\nimport { Route } from \"react-router-dom\";\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  // // const signed = true;\n  // // Redirect user to SignIn page if he tries to access a private route\n  // // without authentication.\n  // // if (isPrivate && !signed) {\n  // //   return <Redirect to=\"/\" />;\n  // // }\n  // // Redirect user to Main page if he tries to access a non private route\n  // // (SignIn or SignUp) after being authenticated.\n  // // if (!isPrivate && signed) {\n  // //   return <Redirect to=\"/dashboard\" />;\n  // // }\n  // // If not included on both previous cases, redirect user to the desired route.\n  // ------------> This file is from a template, all pages are public for now\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }));\n}\n/*\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\n\nRouteWrapper.defaultProps = {\n  isPrivate: true //final is true\n};\n*/","map":{"version":3,"sources":["/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/routes/Routes.js"],"names":["React","Route","RouteWrapper","component","Component","isPrivate","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,SAAS,EAAEC,SADwB;AAEnCC,EAAAA,SAFmC;AAGnC,KAAGC;AAHgC,CAAtB,EAIZ;AACD;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AAEA,sBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,iBACT,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAUD;AACD","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  // // const signed = true;\n  \n  // // Redirect user to SignIn page if he tries to access a private route\n  // // without authentication.\n   \n  // // if (isPrivate && !signed) {\n  // //   return <Redirect to=\"/\" />;\n  // // }\n\n  // // Redirect user to Main page if he tries to access a non private route\n  // // (SignIn or SignUp) after being authenticated.\n  \n  // // if (!isPrivate && signed) {\n  // //   return <Redirect to=\"/dashboard\" />;\n  // // }\n\n  \n  // // If not included on both previous cases, redirect user to the desired route.\n\n  // ------------> This file is from a template, all pages are public for now\n   \n  return (\n    <Route\n      {...rest}\n      render={props => (\n          <Component {...props} />\n      )}\n    />\n    \n  );\n  \n}\n/*\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\n\nRouteWrapper.defaultProps = {\n  isPrivate: true //final is true\n};\n*/\n"]},"metadata":{},"sourceType":"module"}