{"ast":null,"code":"var _jsxFileName = \"/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Dashboard/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport history from '../../services/history';\n\nconst Dashboard = () => {\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/spotify/user/profile', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      if (data.error === \"You must be logged in to access this URL\") {\n        history.push('/'); // window.location.href = '/';\n      } else if (data.error === \"You must be authenticated with Spotify to access this URL\") {\n        history.push('/profile'); // window.location.href = '/linkspotify';\n      }\n\n      return userInfoHandler(data);\n    }).catch(err => {\n      return console.error(err);\n    });\n    fetch('http://127.0.0.1:8000/spotify/user/playing_track', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return currentlyListeningHandler(data.item);\n    }).catch(err => {\n      currentlyListeningHandler('');\n      return console.error(err);\n    });\n    fetch('http://127.0.0.1:8000/spotify/user/recent_tracks', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return recentlyPlayedListHandler(data.items);\n    }).catch(err => {\n      return console.error(err);\n    });\n    fetch('http://127.0.0.1:8000/spotify/user/top_tracks?timespan=short_term&limit=7', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return topTracksHandler(data.items);\n    }).catch(err => {\n      return console.error(err);\n    });\n  }, [currentlyListeningHandler]);\n  const [userDisplayName, setUserDisplayName] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [currentlyListening, setCurrentlyListening] = useState([]);\n  const [recentlyPlayedList, setRecentlyPlayedList] = useState([]);\n\n  const userInfoHandler = props => {\n    setUserDisplayName(props.display_name + '\\'s ');\n  };\n\n  const contentHandler = (type, uri) => {\n    fetch('http://127.0.0.1:8000/content/' + type + '/' + uri, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return console.log(data);\n    }).catch(err => {\n      return console.error(err);\n    });\n  };\n\n  const currentlyListeningHandler = props => {\n    // FIXME: array with only 1 item\n    console.log(props);\n\n    if (props === '') {// User is not listening to anything\n    } else {\n      setIsListening(true);\n      const array = [];\n      array.push({\n        id: 1,\n        artist: props.artists[0].name,\n        name: props.name,\n        // spotify_id: props.type,\n        type: props.type,\n        uri: props.uri\n      });\n      setCurrentlyListening(array.map(array => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: array.id,\n          onClick: contentHandler(array.type, array.uri),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }\n        }, array.artist, \" - \", array.name);\n      }));\n    }\n  };\n\n  const recentlyPlayedListHandler = props => {\n    // FIXME: - make list items link to their content so it's ratable\n    //        - add at what time the track was played\n    const array = [];\n\n    for (let i = 0; i < props.length; i++) {\n      array.push({\n        id: i,\n        value: props[i].track.artists[0].name + ' - ' + props[i].track.name\n      });\n    }\n\n    setRecentlyPlayedList(array.map(array => /*#__PURE__*/React.createElement(\"li\", {\n      key: array.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, array.value)));\n  };\n\n  const fetchTopTracks = () => {\n    const url = 'http://127.0.0.1:8000/spotify/user/top_tracks' + topTracksTimeLimit; // console.log(url);\n\n    fetch(url, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return topTracksHandler(data.items);\n    }).catch(err => {\n      return console.error(err);\n    });\n  };\n\n  const topTracksTimeLimitDef = {\n    short: '?timespan=short_term&limit=7',\n    medium: '?timespan=medium_term&limit=7',\n    long: '?timespan=long_term&limit=7'\n  };\n  let topTracksTimeLimit = '';\n  const [topTracks, setTopTracks] = useState([]);\n  const [topTracksStatus, setTopTracksStatus] = useState('the past 4 weeks:');\n\n  const switchTimeFrame = props => {\n    if (props === '4 weeks') {\n      topTracksTimeLimit = topTracksTimeLimitDef.short;\n      setTopTracksStatus('the past 4 weeks:');\n    } else if (props === '6 months') {\n      //setTopTracksTimeLimit(topTracksTimeLimitDef.medium);\n      topTracksTimeLimit = topTracksTimeLimitDef.medium;\n      setTopTracksStatus('the past 6 months:');\n    } else if (props === 'all time') {\n      //setTopTracksTimeLimit(topTracksTimeLimitDef.long);\n      topTracksTimeLimit = topTracksTimeLimitDef.long;\n      setTopTracksStatus('all time:');\n    }\n\n    fetchTopTracks(topTracksTimeLimit);\n  };\n\n  const topTracksHandler = props => {\n    const array = [];\n\n    for (let i = 0; i < props.length; i++) {\n      array.push({\n        id: i,\n        value: props[i].artists[0].name + ' - ' + props[i].name\n      });\n    }\n\n    setTopTracks(array.map(array => /*#__PURE__*/React.createElement(\"li\", {\n      key: array.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, array.value)));\n  }; // TODO: Stop this from rendering if user is not logged in or linked to Spotify\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, userDisplayName, \" Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, isListening && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, \"Currently Playing\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, currentlyListening))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, \"Recently Played\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, recentlyPlayedList)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, \"Top Tracks\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: switchTimeFrame.bind(switchTimeFrame, '4 weeks'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, \"4 Weeks\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: switchTimeFrame.bind(switchTimeFrame, '6 months'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, \"6 Months\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: switchTimeFrame.bind(switchTimeFrame, 'all time'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, \"All Time\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }), \"Top tracks from \", topTracksStatus, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, topTracks)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/logout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, \"Logout\")));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Dashboard/index.js"],"names":["React","useState","useEffect","history","Dashboard","fetch","method","credentials","then","resp","json","data","error","push","userInfoHandler","catch","err","console","currentlyListeningHandler","item","recentlyPlayedListHandler","items","topTracksHandler","userDisplayName","setUserDisplayName","isListening","setIsListening","currentlyListening","setCurrentlyListening","recentlyPlayedList","setRecentlyPlayedList","props","display_name","contentHandler","type","uri","log","array","id","artist","artists","name","map","i","length","value","track","fetchTopTracks","url","topTracksTimeLimit","topTracksTimeLimitDef","short","medium","long","topTracks","setTopTracks","topTracksStatus","setTopTracksStatus","switchTimeFrame","bind"],"mappings":"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","sourcesContent":["import React, { useState , useEffect }from \"react\";\nimport history from '../../services/history';\n\nconst Dashboard = () => {\n  useEffect(() => { \n      fetch('http://127.0.0.1:8000/spotify/user/profile', {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        if (data.error === \"You must be logged in to access this URL\") {\n          history.push('/');\n          // window.location.href = '/';\n        } else if (data.error === \"You must be authenticated with Spotify to access this URL\") {\n          history.push('/profile');\n          // window.location.href = '/linkspotify';\n        } \n        return userInfoHandler(data);\n      })\n      .catch((err) => {\n        return console.error(err);\n      })\n\n      fetch('http://127.0.0.1:8000/spotify/user/playing_track', {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        return currentlyListeningHandler(data.item);\n      })\n      .catch((err) => {\n        currentlyListeningHandler('');\n        return console.error(err);\n      })\n\n      fetch('http://127.0.0.1:8000/spotify/user/recent_tracks', {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        return recentlyPlayedListHandler(data.items);\n      })\n      .catch((err) => {\n        return console.error(err);\n      })\n\n      fetch('http://127.0.0.1:8000/spotify/user/top_tracks?timespan=short_term&limit=7', {\n        method: 'GET',\n        credentials: 'include'\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        return topTracksHandler(data.items);\n      })\n      .catch((err) => {\n        return console.error(err);\n      })\n  }, [currentlyListeningHandler])\n\n  const [userDisplayName, setUserDisplayName] = useState('');\n  \n  const [isListening, setIsListening] = useState(false);\n  const [currentlyListening, setCurrentlyListening] = useState([]);\n\n  const [recentlyPlayedList, setRecentlyPlayedList] = useState([]);\n\n  const userInfoHandler = (props) => {\n    setUserDisplayName(props.display_name + '\\'s ');\n  };\n\n  const contentHandler = (type, uri) => {\n    fetch('http://127.0.0.1:8000/content/'+type+'/'+uri, {\n      method: 'GET',\n      credentials: 'include'\n    })\n    .then((resp) => {\n      return resp.json();\n    })\n    .then((data) => {\n      return console.log(data);\n    })\n    .catch((err) => {\n      return console.error(err);\n    })\n  };\n\n  const currentlyListeningHandler = (props) => {\n    // FIXME: array with only 1 item\n    console.log(props);\n    if (props === '') {\n      // User is not listening to anything\n    } else {\n      setIsListening(true);\n      const array = [];\n      array.push({\n        id: 1,\n        artist: props.artists[0].name,\n        name: props.name,\n        // spotify_id: props.type,\n        type: props.type,\n        uri: props.uri\n      });\n      setCurrentlyListening(array.map((array) => {\n          return (<li key={array.id} onClick={contentHandler(array.type, array.uri)}>\n            {array.artist} - {array.name}\n          </li>)\n        }\n      ));\n    }\n  };\n\n  const recentlyPlayedListHandler = (props) => {\n    // FIXME: - make list items link to their content so it's ratable\n    //        - add at what time the track was played\n    const array = [];\n    for (let i = 0; i < props.length; i++) {\n      array.push({\n        id: i,\n        value: props[i].track.artists[0].name + ' - ' + props[i].track.name\n      });\n    }\n    setRecentlyPlayedList(array.map((array) =>\n      <li key={array.id}>{array.value}</li>\n    ));\n  };\n\n  const fetchTopTracks = () => {\n    const url = 'http://127.0.0.1:8000/spotify/user/top_tracks'+topTracksTimeLimit;\n    // console.log(url);\n    fetch(url, {\n      method: 'GET',\n      credentials: 'include'\n    })\n    .then((resp) => {\n      return resp.json();\n    })\n    .then((data) => {\n      return topTracksHandler(data.items);\n    })\n    .catch((err) => {\n      return console.error(err);\n    })\n  };\n\n  const topTracksTimeLimitDef = {\n    short: '?timespan=short_term&limit=7',\n    medium: '?timespan=medium_term&limit=7',\n    long: '?timespan=long_term&limit=7'\n  };\n\n  let topTracksTimeLimit = '';\n  const [topTracks, setTopTracks] = useState([]);\n  const [topTracksStatus, setTopTracksStatus] = useState('the past 4 weeks:');\n\n  const switchTimeFrame = (props) => {\n    if (props === '4 weeks') {\n      topTracksTimeLimit = topTracksTimeLimitDef.short;\n      setTopTracksStatus('the past 4 weeks:');\n    } else if (props === '6 months'){\n      //setTopTracksTimeLimit(topTracksTimeLimitDef.medium);\n      topTracksTimeLimit = topTracksTimeLimitDef.medium;\n      setTopTracksStatus('the past 6 months:');\n    } else if (props === 'all time'){\n      //setTopTracksTimeLimit(topTracksTimeLimitDef.long);\n      topTracksTimeLimit = topTracksTimeLimitDef.long;\n      setTopTracksStatus('all time:');\n    }\n    fetchTopTracks(topTracksTimeLimit);\n  };\n  \n  const topTracksHandler = (props) => {\n    const array = [];\n    for (let i = 0; i < props.length; i++) {\n      array.push({\n        id: i,\n        value: props[i].artists[0].name + ' - ' + props[i].name\n      });\n    }\n    setTopTracks(array.map((array) =>\n      <li key={array.id}>{array.value}</li>\n    ));\n  };\n\n  // TODO: Stop this from rendering if user is not logged in or linked to Spotify\n  return (\n      <div>\n      <h1>{userDisplayName} Dashboard</h1>\n      <div>\n        {isListening && \n          <div>\n          <h2>Currently Playing</h2>\n          <ul>\n            {currentlyListening}\n          </ul>\n          </div>\n        }\n      </div>\n\n      <div>\n        <h2>Recently Played</h2>\n        <ul>\n          {recentlyPlayedList}\n        </ul>\n      </div>\n\n      <div>\n        <h2>Top Tracks</h2>\n        <button onClick={switchTimeFrame.bind(switchTimeFrame, '4 weeks')}>\n          4 Weeks\n        </button>\n        <button onClick={switchTimeFrame.bind(switchTimeFrame, '6 months')}>\n          6 Months\n        </button>\n        <button onClick={switchTimeFrame.bind(switchTimeFrame, 'all time')}>\n          All Time\n        </button>\n        <br/>\n        Top tracks from {topTracksStatus}\n        <ul>\n          {topTracks}\n        </ul>\n      </div>\n\n      <div>\n        <a href='/logout'>Logout</a>\n      </div>\n    </div>\n    )\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}