{"ast":null,"code":"var _jsxFileName = \"/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Dashboard/index.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Dashboard = () => {\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/spotify/user/playing_track', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return currentlyListeningHandler(data.item);\n    }).catch(err => {\n      return console.error(err);\n    });\n    fetch('http://127.0.0.1:8000/spotify/user/recent_tracks', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return recentlyPlayedListHandler(data.items);\n    }).catch(err => {\n      return console.error(err);\n    });\n  }, []);\n  const [currentlyListening, setCurrentlyListening] = useState([]);\n  const [recentlyPlayedList, setRecentlyPlayedList] = useState([]);\n\n  const currentlyListeningHandler = props => {\n    // FIXME: array with only 1 item\n    const array = [];\n    array.push({\n      id: 1,\n      value: props.artists[0].name + ' - ' + props.name\n    });\n    setCurrentlyListening(arra.map(array => /*#__PURE__*/React.createElement(\"li\", {\n      key: array.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, array.value)));\n  };\n\n  const recentlyPlayedListHandler = props => {\n    const array = [];\n\n    for (let i = 0; i < props.length; i++) {\n      console.log(props[i].track.artists[0].name);\n      array.push({\n        id: i,\n        value: props[i].track.artists[0].name + ' - ' + props[i].track.name\n      });\n    }\n\n    setRecentlyPlayedList(array.map(array => /*#__PURE__*/React.createElement(\"li\", {\n      key: array.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, array.value)));\n    console.log(array);\n    console.log(props);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Recentyly Played\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, recentlyPlayedList)));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Dashboard/index.js"],"names":["React","useState","useEffect","Dashboard","fetch","method","credentials","then","resp","json","data","currentlyListeningHandler","item","catch","err","console","error","recentlyPlayedListHandler","items","currentlyListening","setCurrentlyListening","recentlyPlayedList","setRecentlyPlayedList","props","array","push","id","value","artists","name","arra","map","i","length","log","track"],"mappings":"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","sourcesContent":["import React, { useState , useEffect }from \"react\";\n\nconst Dashboard = () => {\n  useEffect(() => { \n      fetch('http://127.0.0.1:8000/spotify/user/playing_track', {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        return currentlyListeningHandler(data.item);\n      })\n      .catch((err) => {\n        return console.error(err);\n      })\n\n      fetch('http://127.0.0.1:8000/spotify/user/recent_tracks', {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        return recentlyPlayedListHandler(data.items);\n      })\n      .catch((err) => {\n        return console.error(err);\n      })\n  }, [])\n  const [currentlyListening, setCurrentlyListening] = useState([]);\n  const [recentlyPlayedList, setRecentlyPlayedList] = useState([]);\n\n  const currentlyListeningHandler = (props) => {\n    // FIXME: array with only 1 item\n    const array = [];\n    array.push({\n      id: 1,\n      value: props.artists[0].name + ' - ' + props.name\n    });\n    setCurrentlyListening(arra.map((array) => \n      <li key={array.id}>{array.value}</li>\n    ));\n  };\n\n  const recentlyPlayedListHandler = (props) => {\n    const array = [];\n    for (let i = 0; i < props.length; i++) {\n      console.log(props[i].track.artists[0].name);\n      array.push({\n        id: i,\n        value: props[i].track.artists[0].name + ' - ' + props[i].track.name\n      });\n    }\n    setRecentlyPlayedList(array.map((array) =>\n      <li key={array.id}>{array.value}</li>\n    ));\n    console.log(array);\n    console.log(props);\n  };\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      {/* <button onClick={()=> recentlyPlayedListHandler(currentTrack)}>\n        play\n      </button> */}\n      <div>\n        <h2>Recentyly Played</h2>\n        <ul>\n        {recentlyPlayedList}\n        </ul>\n      </div>\n    </div>\n  )\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}