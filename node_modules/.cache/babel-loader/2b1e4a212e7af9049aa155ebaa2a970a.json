{"ast":null,"code":"var _jsxFileName = \"/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Profile/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Dashboard = () => {\n  const {\n    user_id\n  } = useParams();\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/ratings/list/' + user_id, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      // const k = data.ratings.length - 1;\n      // for (let i = k; i >= 0; i--) {\n      //     fetchImagesHandler(data.ratings[i]);\n      // }\n      return ratingsListHandler(data);\n    }).catch(err => {\n      return console.error(err);\n    });\n  }, []);\n  const [ratingsList, setRatingsList] = useState([]);\n  const [userIsFriend, setUserIsFriend] = useState(true);\n  const [notFriendsMessage, setNotFriendsMessage] = useState('');\n\n  const ratingsListHandler = props => {\n    if (props.ratings === undefined) {\n      setUserIsFriend(false);\n      setNotFriendsMessage('You are not friends with this user.');\n    } else if (props.ratings.length === 0) {// User has no ratings;\n    } else {\n      const array = [];\n      const k = props.ratings.length - 1;\n\n      for (let i = k; i >= 0; i--) {\n        array.push({\n          name: props.ratings[i].name,\n          uri: props.ratings[i].uri,\n          content_id: props.ratings[i].content_id,\n          rating: props.ratings[i].rating,\n          id: k - i\n        });\n      }\n\n      setRatingsList(array.map(array => {\n        const url = '/view/' + user_id + '/' + array.uri + '/' + array.content_id;\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: array.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }, array.rating, \"/10 - \", array.name));\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, user_id, \"'s Profile\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/friends\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Friends\"), userIsFriend && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Track ratings:\"), ratingsList), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, notFriendsMessage));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Profile/index.js"],"names":["React","useEffect","useState","useParams","Dashboard","user_id","fetch","method","credentials","then","resp","json","data","ratingsListHandler","catch","err","console","error","ratingsList","setRatingsList","userIsFriend","setUserIsFriend","notFriendsMessage","setNotFriendsMessage","props","ratings","undefined","length","array","k","i","push","name","uri","content_id","rating","id","map","url"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Dashboard = () => {\n  const { user_id } = useParams();\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/ratings/list/'+user_id, {\n        method: 'GET',\n        credentials: 'include',\n    })\n    .then((resp) => {\n        return resp.json();\n    })\n    .then((data) => {\n        // const k = data.ratings.length - 1;\n        // for (let i = k; i >= 0; i--) {\n        //     fetchImagesHandler(data.ratings[i]);\n        // }\n        return ratingsListHandler(data);\n    })\n    .catch((err) => {\n        return console.error(err);\n    })\n  }, []);\n\n  const [ratingsList, setRatingsList] = useState([]);\n  const [userIsFriend, setUserIsFriend] = useState(true);\n  const [notFriendsMessage, setNotFriendsMessage] = useState('');\n  const ratingsListHandler = (props) => {\n    if (props.ratings === undefined) {\n      setUserIsFriend(false);\n      setNotFriendsMessage('You are not friends with this user.');\n    } else if (props.ratings.length === 0) {\n      // User has no ratings;\n    } else {\n        const array = [];\n        const k = props.ratings.length - 1;\n        for (let i = k; i >= 0; i--) {\n            array.push({\n                name: props.ratings[i].name,\n                uri: props.ratings[i].uri,\n                content_id: props.ratings[i].content_id,\n                rating: props.ratings[i].rating,\n                id: (k - i)\n            });\n        }\n        setRatingsList(array.map((array) => {\n            const url = '/view/'+user_id+'/'+array.uri+'/'+array.content_id;\n            return (\n                <li key={array.id}>\n                    <a href={url}>{array.rating}/10 - {array.name}</a>\n                </li>\n            );\n        }))\n    }\n  };\n  return (\n    <div>\n      <h1>{user_id}'s Profile</h1>\n      <a href='/dashboard'>Dashboard</a>\n      <a href='/friends'>Friends</a>\n            {userIsFriend && <div>\n                <h2>Track ratings:</h2>\n                {ratingsList}\n            </div>}\n            <div>\n              {notFriendsMessage}\n            </div>\n    </div>\n  )\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}