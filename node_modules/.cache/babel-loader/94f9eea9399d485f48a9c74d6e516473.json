{"ast":null,"code":"var _jsxFileName = \"/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Ratings/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { render } from '@testing-library/react';\n\nconst Ratings = () => {\n  const [idsAndRantings, setIdsandRatings] = useState([]);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/ratings/list', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return setIdsandRatings(data);\n    }).catch(err => {\n      return console.error(err);\n    });\n    console.log(idsAndRantings); // if (idsAndRantings.ratings.length === 0) {\n    //     // User has no ratings\n    // } else {\n    //     const k = idsAndRantings.ratings.length - 1;\n    //     for (let i = k; i >= 0; i--) {\n    //         fetch('http://127.0.0.1:8000/content/'+idsAndRantings.ratings[i].content_id, {\n    //             method: 'GET',\n    //             credentials: 'include',\n    //         })\n    //         .then((resp) => {\n    //             return resp.json();\n    //         })\n    //         .then((data) => {\n    //             // array.push({\n    //             //     id: (k - i),\n    //             //     content_id: props.ratings[i].content_id,\n    //             //     rating: props.ratings[i].rating,\n    //             //     name: data.name,\n    //             //     uri: data.uri\n    //             // });\n    //             console.log(data);\n    //             // return data;\n    //         })\n    //         .catch((err) => {\n    //             return console.error(err);\n    //         })\n    //     }\n    // }\n  }, []); // // const [fetchedContentInfo, setFetchedContentInfo] = useState([]);\n  // let fetchedContentInfo = [];\n  // const [ratingsList, setRatingsList] = useState([]);\n  // const ratingsListHandler = (props) => {\n  //     const array = [];\n  //     if (props.ratings.length === 0) {\n  //         // User has no ratings\n  //     } else {\n  //         const k = props.ratings.length - 1;\n  //         for (let i = k; i >= 0; i--) {\n  //             fetch('http://127.0.0.1:8000/content/'+props.ratings[i].content_id, {\n  //                 method: 'GET',\n  //                 credentials: 'include',\n  //             })\n  //             .then((resp) => {\n  //                 return resp.json();\n  //             })\n  //             .then((data) => {\n  //                 array.push({\n  //                     id: (k - i),\n  //                     content_id: props.ratings[i].content_id,\n  //                     rating: props.ratings[i].rating,\n  //                     name: data.name,\n  //                     uri: data.uri\n  //                 });\n  //                 console.log(array);\n  //                 // return data;\n  //             })\n  //             .catch((err) => {\n  //                 return console.error(err);\n  //             })\n  //         }\n  //     }\n  //     setRatingsList(array.map((array) => {\n  //         return(\n  //             <li key={array.id}>\n  //                 {array.name}\n  //             </li>\n  //         );\n  //     }));\n  // };\n\n  render();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Ratings\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Track ratings:\")));\n};\n\nexport default Ratings;","map":{"version":3,"sources":["/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Ratings/index.js"],"names":["React","useState","useEffect","render","Ratings","idsAndRantings","setIdsandRatings","fetch","method","credentials","then","resp","json","data","catch","err","console","error","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM,CAACC,cAAD,EAAiBC,gBAAjB,IAAqCL,QAAQ,CAAC,EAAD,CAAnD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AACxCC,MAAAA,MAAM,EAAE,KADgC;AAExCC,MAAAA,WAAW,EAAE;AAF2B,KAAvC,CAAL,CAICC,IAJD,CAIOC,IAAD,IAAU;AACZ,aAAOA,IAAI,CAACC,IAAL,EAAP;AACH,KAND,EAOCF,IAPD,CAOOG,IAAD,IAAU;AACZ,aAAOP,gBAAgB,CAACO,IAAD,CAAvB;AACH,KATD,EAUCC,KAVD,CAUQC,GAAD,IAAS;AACZ,aAAOC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAP;AACH,KAZD;AAcAC,IAAAA,OAAO,CAACE,GAAR,CAAYb,cAAZ,EAfY,CAkBZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GA/CQ,EA+CN,EA/CM,CAAT,CAFkB,CAmDlB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAF,EAAAA,MAAM;AACN,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAFJ,CADJ;AAQH,CAvGD;;AAyGA,eAAeC,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { render } from '@testing-library/react';\n\nconst Ratings = () => {\n    const [idsAndRantings, setIdsandRatings] = useState([]);\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/ratings/list', {\n            method: 'GET',\n            credentials: 'include',\n        })\n        .then((resp) => {\n            return resp.json();\n        })\n        .then((data) => {\n            return setIdsandRatings(data);\n        })\n        .catch((err) => {\n            return console.error(err);\n        })\n\n        console.log(idsAndRantings);\n\n\n        // if (idsAndRantings.ratings.length === 0) {\n        //     // User has no ratings\n        // } else {\n        //     const k = idsAndRantings.ratings.length - 1;\n        //     for (let i = k; i >= 0; i--) {\n        //         fetch('http://127.0.0.1:8000/content/'+idsAndRantings.ratings[i].content_id, {\n        //             method: 'GET',\n        //             credentials: 'include',\n        //         })\n        //         .then((resp) => {\n        //             return resp.json();\n        //         })\n        //         .then((data) => {\n        //             // array.push({\n        //             //     id: (k - i),\n        //             //     content_id: props.ratings[i].content_id,\n        //             //     rating: props.ratings[i].rating,\n        //             //     name: data.name,\n        //             //     uri: data.uri\n        //             // });\n        //             console.log(data);\n        //             // return data;\n        //         })\n        //         .catch((err) => {\n        //             return console.error(err);\n        //         })\n        //     }\n        // }\n\n    }, []);\n\n    // // const [fetchedContentInfo, setFetchedContentInfo] = useState([]);\n    // let fetchedContentInfo = [];\n    // const [ratingsList, setRatingsList] = useState([]);\n\n    // const ratingsListHandler = (props) => {\n    //     const array = [];\n    //     if (props.ratings.length === 0) {\n    //         // User has no ratings\n    //     } else {\n    //         const k = props.ratings.length - 1;\n    //         for (let i = k; i >= 0; i--) {\n    //             fetch('http://127.0.0.1:8000/content/'+props.ratings[i].content_id, {\n    //                 method: 'GET',\n    //                 credentials: 'include',\n    //             })\n    //             .then((resp) => {\n    //                 return resp.json();\n    //             })\n    //             .then((data) => {\n    //                 array.push({\n    //                     id: (k - i),\n    //                     content_id: props.ratings[i].content_id,\n    //                     rating: props.ratings[i].rating,\n    //                     name: data.name,\n    //                     uri: data.uri\n    //                 });\n    //                 console.log(array);\n    //                 // return data;\n    //             })\n    //             .catch((err) => {\n    //                 return console.error(err);\n    //             })\n    //         }\n    //     }\n    //     setRatingsList(array.map((array) => {\n    //         return(\n    //             <li key={array.id}>\n    //                 {array.name}\n    //             </li>\n    //         );\n    //     }));\n    // };\n\n    render()\n    return (\n        <div>\n            <h1>Ratings</h1>\n            <div>\n                <h2>Track ratings:</h2>\n            </div>\n        </div>\n    );\n};\n\nexport default Ratings;"]},"metadata":{},"sourceType":"module"}