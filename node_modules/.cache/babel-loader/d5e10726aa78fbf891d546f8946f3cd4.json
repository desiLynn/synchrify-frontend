{"ast":null,"code":"var _jsxFileName = \"/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Friends/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport history from '../../services/history';\n\nconst Friends = () => {\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/friends/list', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return friendsListHandler(data);\n    }).catch(err => {\n      return console.error(err);\n    });\n    fetch('http://127.0.0.1:8000/friends/pending', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      //return console.log(data);\n      return friendsPendingHandler(data);\n    }).catch(err => {\n      return console.error(err);\n    });\n  }, []);\n  const [friendsList, setFriendsList] = useState([]);\n  const [friendsPending, setFriendsPending] = useState(false);\n  const [friendsPendingList, setFriendsPendingList] = useState([]);\n  const [friendName, setFriendName] = useState('');\n\n  const friendsListHandler = props => {\n    const array = [];\n\n    if (props.friends.length === 0) {\n      setFriendsList('No friends yet.');\n    } else {\n      // map this\n      for (let i = 0; i < props.friends.length; i++) {\n        array.push({\n          id: i,\n          value: props.friends[i]\n        });\n      }\n\n      console.log(array);\n      setFriendsList(array.map(array => {\n        // add url here \n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: array.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }\n        }, \"user_id: \", array.value);\n      }));\n    }\n  };\n\n  const friendsPendingHandler = props => {\n    if (props.pending.length > 0) {\n      const array = [];\n      setFriendsPending(true);\n\n      for (let i = 0; i < props.pending.length; i++) {\n        array.push({\n          id: i,\n          value: props.pending[i]\n        });\n      }\n\n      console.log(array);\n      setFriendsPendingList(array.map(array => {\n        // add url here \n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: array.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }\n        }, \"user_id: \", array.value);\n      }));\n    }\n  };\n\n  const handleAddFriend = event => {\n    event.preventDefault();\n    fetch('http://127.0.0.1:8000/friends/add/' + friendName, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      // FIXME: not refreshing\n      return history.push('/friends');\n      ;\n    }).catch(err => {\n      return console.error(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Friends\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), friendsList, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleAddFriend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Add a friend:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: friendName,\n    onChange: e => setFriendName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"+\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }))), friendsPending && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }), \"Friends pending:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }), friendsPendingList));\n};\n\nexport default Friends;","map":{"version":3,"sources":["/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Friends/index.js"],"names":["React","useState","useEffect","history","Friends","fetch","method","credentials","then","resp","json","data","friendsListHandler","catch","err","console","error","friendsPendingHandler","friendsList","setFriendsList","friendsPending","setFriendsPending","friendsPendingList","setFriendsPendingList","friendName","setFriendName","props","array","friends","length","i","push","id","value","log","map","pending","handleAddFriend","event","preventDefault","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport history from '../../services/history';\n\nconst Friends = () => {\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/friends/list', {\n            method: 'GET',\n            credentials: 'include',\n          })\n          .then((resp) => {\n            return resp.json();\n          })\n          .then((data) => {\n            return friendsListHandler(data);\n          })\n          .catch((err) => {\n            return console.error(err);\n          })\n        fetch('http://127.0.0.1:8000/friends/pending', {\n            method: 'GET',\n            credentials: 'include',\n          })\n          .then((resp) => {\n            return resp.json();\n          })\n          .then((data) => {\n            //return console.log(data);\n            return friendsPendingHandler(data);\n          })\n          .catch((err) => {\n            return console.error(err);\n          })\n    }, []);\n\n    const [friendsList, setFriendsList] = useState([]);\n    const [friendsPending, setFriendsPending] = useState(false);\n    const [friendsPendingList, setFriendsPendingList] = useState([]);\n    const [friendName, setFriendName] = useState('');\n\n    const friendsListHandler = (props) => {\n        const array = [];\n        if (props.friends.length === 0) {\n            setFriendsList('No friends yet.');\n        } else { \n            // map this\n            for (let i = 0; i < props.friends.length; i++) {\n                array.push({\n                    id: i,\n                    value: props.friends[i]\n                });\n            }\n            console.log(array);\n            setFriendsList(array.map((array) => {\n                // add url here \n                return (\n                    <li key = {array.id}>user_id: {array.value}</li>\n                    );\n            }));\n        }\n    };\n\n    const friendsPendingHandler = (props) => {\n        if (props.pending.length > 0) {\n            const array = [];\n            setFriendsPending(true);\n            for (let i = 0; i < props.pending.length; i++) {\n                array.push({\n                    id: i,\n                    value: props.pending[i]\n                });\n            }\n            console.log(array);\n            setFriendsPendingList(array.map((array) => {\n                // add url here \n                return (\n                    <li key = {array.id}>user_id: {array.value}</li>\n                    );\n            }));\n        }\n    }\n\n    const handleAddFriend = (event) => {\n        event.preventDefault();\n        fetch('http://127.0.0.1:8000/friends/add/'+friendName, {\n            method: 'GET',\n            credentials: 'include',\n          })\n          .then((resp) => {\n            return resp.json();\n          })\n          .then((data) => {\n            // FIXME: not refreshing\n            return history.push('/friends');;\n          })\n          .catch((err) => {\n            return console.error(err);\n          })\n    };\n    return (\n        <div>\n            <h1>Friends</h1>\n            <div> \n                <a href=\"/dashboard\">Dashboard</a>\n            <div>\n                <br/>\n                {friendsList} \n                <br/>\n            </div>\n            <form onSubmit={handleAddFriend}>\n                <label>\n                    Add a friend:\n                    <input \n                        type=\"text\"\n                        value={friendName}\n                        onChange={e => setFriendName(e.target.value)} \n                    />\n                </label>\n                    <input type=\"submit\" value=\"+\" />\n                </form>\n            </div>\n            {friendsPending && \n            <div>\n                <br/>\n                Friends pending: \n                <br/>\n                {friendsPendingList}\n            </div>}\n        </div>\n    );\n}\n\nexport default Friends;"]},"metadata":{},"sourceType":"module"}