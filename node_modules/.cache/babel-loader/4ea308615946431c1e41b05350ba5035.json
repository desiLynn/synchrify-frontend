{"ast":null,"code":"var _jsxFileName = \"/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Dashboard/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport history from '../../services/history';\n\nconst Dashboard = () => {\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/spotify/user/profile', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      if (data.error === \"You must be logged in to access this URL\") {\n        history.push('/'); // window.location.href = '/';\n      } else if (data.error === \"You must be authenticated with Spotify to access this URL\") {\n        history.push('/profile'); // window.location.href = '/linkspotify';\n      }\n\n      return userInfoHandler(data);\n    }).catch(err => {\n      return console.error(err);\n    });\n    fetch('http://127.0.0.1:8000/spotify/user/playing_track', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return currentlyListeningHandler(data.item);\n    }).catch(err => {\n      currentlyListeningHandler('');\n      return console.error(err);\n    });\n    fetch('http://127.0.0.1:8000/spotify/user/recent_tracks', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return recentlyPlayedListHandler(data.items);\n    }).catch(err => {\n      return console.error(err);\n    });\n    fetch('http://127.0.0.1:8000/spotify/user/top_tracks?timespan=short_term&limit=7', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return topTracksHandler(data.items);\n    }).catch(err => {\n      return console.error(err);\n    });\n  }, []);\n  const [userDisplayName, setUserDisplayName] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [currentlyListening, setCurrentlyListening] = useState([]);\n  const [recentlyPlayedList, setRecentlyPlayedList] = useState([]);\n\n  const userInfoHandler = props => {\n    setUserDisplayName(props.display_name + '\\'s ');\n  };\n\n  const currentlyListeningHandler = props => {\n    // FIXME: array with only 1 item\n    // TODO: Add images\n    console.log('Currently listening:');\n    console.log(props);\n\n    if (props === '') {// User is not listening to anything\n    } else {\n      setIsListening(true);\n      const array = [];\n      array.push({\n        id: 1,\n        img: props.album.images[2].url,\n        artist: props.artists[0].name,\n        name: props.name,\n        type: props.type,\n        uri: props.id\n      });\n      setCurrentlyListening(array.map(array => {\n        const url = '/rate/track/' + array.uri;\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: array.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: array.img,\n          alt: array.artist,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }\n        }), array.artist, \" - \", array.name));\n      }));\n    }\n  };\n\n  const recentlyPlayedListHandler = props => {\n    console.log('Recently Played');\n    console.log(props); // TODO: Add images\n\n    const array = [];\n\n    for (let i = 0; i < props.length; i++) {\n      array.push({\n        id: i,\n        img: props[i].track.album.images[2].url,\n        artist: props[i].track.artists[0].name,\n        name: props[i].track.name,\n        type: props[i].track.type,\n        uri: props[i].track.id\n      });\n    }\n\n    setRecentlyPlayedList(array.map(array => {\n      const url = '/rate/track/' + array.uri;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: array.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: array.img,\n        alt: array.artist,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }), array.artist, \" - \", array.name));\n    }));\n  };\n\n  const fetchTopTracks = () => {\n    const url = 'http://127.0.0.1:8000/spotify/user/top_tracks' + topTracksTimeLimit; // console.log(url);\n\n    fetch(url, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return topTracksHandler(data.items);\n    }).catch(err => {\n      return console.error(err);\n    });\n  };\n\n  const topTracksTimeLimitDef = {\n    short: '?timespan=short_term&limit=7',\n    medium: '?timespan=medium_term&limit=7',\n    long: '?timespan=long_term&limit=7'\n  };\n  let topTracksTimeLimit = '';\n  const [topTracks, setTopTracks] = useState([]);\n  const [topTracksStatus, setTopTracksStatus] = useState('the past 4 weeks:');\n\n  const switchTimeFrame = props => {\n    if (props === '4 weeks') {\n      topTracksTimeLimit = topTracksTimeLimitDef.short;\n      setTopTracksStatus('the past 4 weeks:');\n    } else if (props === '6 months') {\n      //setTopTracksTimeLimit(topTracksTimeLimitDef.medium);\n      topTracksTimeLimit = topTracksTimeLimitDef.medium;\n      setTopTracksStatus('the past 6 months:');\n    } else if (props === 'all time') {\n      //setTopTracksTimeLimit(topTracksTimeLimitDef.long);\n      topTracksTimeLimit = topTracksTimeLimitDef.long;\n      setTopTracksStatus('all time:');\n    }\n\n    fetchTopTracks(topTracksTimeLimit);\n  };\n\n  const topTracksHandler = props => {\n    console.log('Top tracks:');\n    console.log(props);\n    const array = [];\n\n    for (let i = 0; i < props.length; i++) {\n      array.push({\n        id: i,\n        img: props[i].album.images[2].url,\n        artist: props[i].artists[0].name,\n        name: props[i].name,\n        type: props[i].type,\n        uri: props[i].id\n      });\n    }\n\n    setTopTracks(array.map(array => {\n      const url = '/rate/track/' + array.uri;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: array.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: array.img,\n        alt: array.artist,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }), array.artist, \" - \", array.name));\n    }));\n  }; // TODO: Stop this from rendering if user is not logged in or linked to Spotify\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, userDisplayName, \" Dashboard\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/friends\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, \"Friends\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/ratings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, \"Ratings\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, isListening && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, \"Currently Playing\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, currentlyListening))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, \"Recently Played\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, recentlyPlayedList)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, \"Top Tracks\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: switchTimeFrame.bind(switchTimeFrame, '4 weeks'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, \"4 Weeks\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: switchTimeFrame.bind(switchTimeFrame, '6 months'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, \"6 Months\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: switchTimeFrame.bind(switchTimeFrame, 'all time'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, \"All Time\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }), \"Top tracks from \", topTracksStatus, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }, topTracks)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/logout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, \"Logout\")));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Dashboard/index.js"],"names":["React","useState","useEffect","history","Dashboard","fetch","method","credentials","then","resp","json","data","error","push","userInfoHandler","catch","err","console","currentlyListeningHandler","item","recentlyPlayedListHandler","items","topTracksHandler","userDisplayName","setUserDisplayName","isListening","setIsListening","currentlyListening","setCurrentlyListening","recentlyPlayedList","setRecentlyPlayedList","props","display_name","log","array","id","img","album","images","url","artist","artists","name","type","uri","map","i","length","track","fetchTopTracks","topTracksTimeLimit","topTracksTimeLimitDef","short","medium","long","topTracks","setTopTracks","topTracksStatus","setTopTracksStatus","switchTimeFrame","bind"],"mappings":"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","sourcesContent":["import React, { useState , useEffect }from \"react\";\nimport history from '../../services/history';\n\nconst Dashboard = () => {\n  useEffect(() => { \n      fetch('http://127.0.0.1:8000/spotify/user/profile', {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        if (data.error === \"You must be logged in to access this URL\") {\n          history.push('/');\n          // window.location.href = '/';\n        } else if (data.error === \"You must be authenticated with Spotify to access this URL\") {\n          history.push('/profile');\n          // window.location.href = '/linkspotify';\n        } \n        return userInfoHandler(data);\n      })\n      .catch((err) => {\n        return console.error(err);\n      })\n\n      fetch('http://127.0.0.1:8000/spotify/user/playing_track', {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        return currentlyListeningHandler(data.item);\n      })\n      .catch((err) => {\n        currentlyListeningHandler('');\n        return console.error(err);\n      })\n\n      fetch('http://127.0.0.1:8000/spotify/user/recent_tracks', {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        return recentlyPlayedListHandler(data.items);\n      })\n      .catch((err) => {\n        return console.error(err);\n      })\n\n      fetch('http://127.0.0.1:8000/spotify/user/top_tracks?timespan=short_term&limit=7', {\n        method: 'GET',\n        credentials: 'include'\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        return topTracksHandler(data.items);\n      })\n      .catch((err) => {\n        return console.error(err);\n      })\n  }, [])\n\n  const [userDisplayName, setUserDisplayName] = useState('');\n  \n  const [isListening, setIsListening] = useState(false);\n  const [currentlyListening, setCurrentlyListening] = useState([]);\n\n  const [recentlyPlayedList, setRecentlyPlayedList] = useState([]);\n\n  const userInfoHandler = (props) => {\n    setUserDisplayName(props.display_name + '\\'s ');\n  };\n\n  const currentlyListeningHandler = (props) => {\n    // FIXME: array with only 1 item\n    // TODO: Add images\n    console.log('Currently listening:')\n    console.log(props);\n    if (props === '') {\n      // User is not listening to anything\n    } else {\n      setIsListening(true);\n      const array = [];\n      array.push({\n        id: 1,\n        img: props.album.images[2].url,\n        artist: props.artists[0].name,\n        name: props.name,\n        type: props.type,\n        uri: props.id\n      });\n      setCurrentlyListening(array.map((array) => {\n        const url = '/rate/track/'+array.uri;\n        return (<li key={array.id}>\n          <a href = {url}>\n            <img src={array.img} alt={array.artist} />\n            {array.artist} - {array.name}\n          </a>\n        </li>\n        );\n      }\n    ));\n    }\n  };\n\n  const recentlyPlayedListHandler = (props) => {\n    console.log('Recently Played')\n    console.log(props);\n    // TODO: Add images\n    const array = [];\n    for (let i = 0; i < props.length; i++) {\n      array.push({\n        id: i,\n        img: props[i].track.album.images[2].url,\n        artist: props[i].track.artists[0].name,\n        name: props[i].track.name,\n        type: props[i].track.type,\n        uri: props[i].track.id\n      });\n    }\n    setRecentlyPlayedList(array.map((array) => {\n      const url = '/rate/track/'+array.uri;\n      return (\n        <li key={array.id}>\n          <a href = {url}>\n            <img src={array.img} alt={array.artist} />\n            {array.artist} - {array.name}\n          </a>\n        </li>\n      );\n      }\n    ));\n  };\n\n  const fetchTopTracks = () => {\n    const url = 'http://127.0.0.1:8000/spotify/user/top_tracks'+topTracksTimeLimit;\n    // console.log(url);\n    fetch(url, {\n      method: 'GET',\n      credentials: 'include'\n    })\n    .then((resp) => {\n      return resp.json();\n    })\n    .then((data) => {\n      return topTracksHandler(data.items);\n    })\n    .catch((err) => {\n      return console.error(err);\n    })\n  };\n\n  const topTracksTimeLimitDef = {\n    short: '?timespan=short_term&limit=7',\n    medium: '?timespan=medium_term&limit=7',\n    long: '?timespan=long_term&limit=7'\n  };\n\n  let topTracksTimeLimit = '';\n  const [topTracks, setTopTracks] = useState([]);\n  const [topTracksStatus, setTopTracksStatus] = useState('the past 4 weeks:');\n\n  const switchTimeFrame = (props) => {\n    if (props === '4 weeks') {\n      topTracksTimeLimit = topTracksTimeLimitDef.short;\n      setTopTracksStatus('the past 4 weeks:');\n    } else if (props === '6 months'){\n      //setTopTracksTimeLimit(topTracksTimeLimitDef.medium);\n      topTracksTimeLimit = topTracksTimeLimitDef.medium;\n      setTopTracksStatus('the past 6 months:');\n    } else if (props === 'all time'){\n      //setTopTracksTimeLimit(topTracksTimeLimitDef.long);\n      topTracksTimeLimit = topTracksTimeLimitDef.long;\n      setTopTracksStatus('all time:');\n    }\n    fetchTopTracks(topTracksTimeLimit);\n  };\n  \n  const topTracksHandler = (props) => {\n    console.log('Top tracks:')\n    console.log(props);\n    const array = [];\n    for (let i = 0; i < props.length; i++) {\n      array.push({\n        id: i,\n        img: props[i].album.images[2].url,\n        artist: props[i].artists[0].name,\n        name: props[i].name,\n        type: props[i].type,\n        uri: props[i].id\n      });\n    }\n    setTopTracks(array.map((array) =>{\n      const url = '/rate/track/'+array.uri;\n      return (\n        <li key={array.id}>\n          <a href = {url}>\n            <img src={array.img} alt={array.artist} />\n            {array.artist} - {array.name}\n          </a>\n        </li>\n      );\n    }\n    ));\n  };\n\n  // TODO: Stop this from rendering if user is not logged in or linked to Spotify\n  return (\n      <div>\n      <h1>{userDisplayName} Dashboard</h1>\n      <a href =\"/friends\">Friends</a> <br/>\n      <a href =\"/ratings\">Ratings</a>\n      <div>\n        {isListening && \n          <div>\n          <h2>Currently Playing</h2>\n          <ul>\n            {currentlyListening}\n          </ul>\n          </div>\n        }\n      </div>\n\n      <div>\n        <h2>Recently Played</h2>\n        <ul>\n          {recentlyPlayedList}\n        </ul>\n      </div>\n\n      <div>\n        <h2>Top Tracks</h2>\n        <button onClick={switchTimeFrame.bind(switchTimeFrame, '4 weeks')}>\n          4 Weeks\n        </button>\n        <button onClick={switchTimeFrame.bind(switchTimeFrame, '6 months')}>\n          6 Months\n        </button>\n        <button onClick={switchTimeFrame.bind(switchTimeFrame, 'all time')}>\n          All Time\n        </button>\n        <br/>\n        Top tracks from {topTracksStatus}\n        <ul>\n          {topTracks}\n        </ul>\n      </div>\n\n      <div>\n        <a href='/logout'>Logout</a>\n      </div>\n    </div>\n    )\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}