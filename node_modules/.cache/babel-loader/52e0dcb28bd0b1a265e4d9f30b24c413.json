{"ast":null,"code":"var _jsxFileName = \"/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Dashboard/index.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Dashboard = () => {\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/spotify/user/recent_tracks', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return setCurrentlyListening(data);\n    }); // .catch((err) => {\n    //   return console.error(err);\n    // })\n  });\n  const [currentlyListening, setCurrentlyListening] = useState([]);\n  const [recentlyPlayedList, setRecentlyPlayedList] = useState([]); // const currentTrack = {\n  //   artist: currentlyListening.item.artists.name,\n  //   name: currentlyListening.item.name, \n  //   album: currentlyListening.item.album.images[2].url,\n  //   time: currentlyListening.item.timestamp\n  // };\n\n  const currentTrack = currentlyListening.items;\n\n  const recentlyPlayedListHandler = props => {\n    const array = [];\n\n    for (let i = 0; i < props.length; i++) {\n      console.log(props[i].track.artists[0].name);\n      array.push(props[i].track.artists[0].name);\n    }\n\n    setRecentlyPlayedList(array);\n    console.log(array);\n    console.log(props);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => recentlyPlayedListHandler(currentTrack),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"play\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, recentlyPlayedList));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Dashboard/index.js"],"names":["React","useState","useEffect","Dashboard","fetch","method","credentials","then","resp","json","data","setCurrentlyListening","currentlyListening","recentlyPlayedList","setRecentlyPlayedList","currentTrack","items","recentlyPlayedListHandler","props","array","i","length","console","log","track","artists","name","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtBD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAAC,kDAAD,EAAqD;AACxDC,MAAAA,MAAM,EAAE,KADgD;AAExDC,MAAAA,WAAW,EAAE;AAF2C,KAArD,CAAL,CAICC,IAJD,CAIOC,IAAD,IAAU;AACd,aAAOA,IAAI,CAACC,IAAL,EAAP;AACD,KAND,EAOCF,IAPD,CAOOG,IAAD,IAAU;AACd,aAAOC,qBAAqB,CAACD,IAAD,CAA5B;AACD,KATD,EADY,CAWZ;AACA;AACA;AACH,GAdQ,CAAT;AAeA,QAAM,CAACE,kBAAD,EAAqBD,qBAArB,IAA8CV,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACY,kBAAD,EAAqBC,qBAArB,IAA8Cb,QAAQ,CAAC,EAAD,CAA5D,CAjBsB,CAoBtB;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMc,YAAY,GAAGH,kBAAkB,CAACI,KAAxC;;AACA,QAAMC,yBAAyB,GAAIC,KAAD,IAAW;AAC3C,UAAMC,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCE,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACE,CAAD,CAAL,CAASI,KAAT,CAAeC,OAAf,CAAuB,CAAvB,EAA0BC,IAAtC;AACAP,MAAAA,KAAK,CAACQ,IAAN,CAAWT,KAAK,CAACE,CAAD,CAAL,CAASI,KAAT,CAAeC,OAAf,CAAuB,CAAvB,EAA0BC,IAArC;AACD;;AACDZ,IAAAA,qBAAqB,CAACK,KAAD,CAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD,GATD;;AAUA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AAAQ,IAAA,OAAO,EAAE,MAAKD,yBAAyB,CAACF,YAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,kBADD,CAdJ,CADF;AAoBD,CA1DD;;AA4DA,eAAeV,SAAf","sourcesContent":["import React, { useState , useEffect }from \"react\";\n\nconst Dashboard = () => {\n  useEffect(() => { \n      fetch('http://127.0.0.1:8000/spotify/user/recent_tracks', {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        return setCurrentlyListening(data);\n      })\n      // .catch((err) => {\n      //   return console.error(err);\n      // })\n  })\n  const [currentlyListening, setCurrentlyListening] = useState([]);\n  const [recentlyPlayedList, setRecentlyPlayedList] = useState([]);\n\n\n  // const currentTrack = {\n  //   artist: currentlyListening.item.artists.name,\n  //   name: currentlyListening.item.name, \n  //   album: currentlyListening.item.album.images[2].url,\n  //   time: currentlyListening.item.timestamp\n  // };\n\n  const currentTrack = currentlyListening.items;\n  const recentlyPlayedListHandler = (props) => {\n    const array = [];\n    for (let i = 0; i < props.length; i++) {\n      console.log(props[i].track.artists[0].name)\n      array.push(props[i].track.artists[0].name);\n    }\n    setRecentlyPlayedList(array);\n    console.log(array);\n    console.log(props);\n  }\n  return (\n    <div>\n      {/* <h1>Dashboard</h1>\n      <h1>\n        Currently listening:\n      </h1>\n      <ul>\n      <li>\n        <img src={currentTrack.album} alt=\"exo album\"/>\n        {currentTrack.artist} - {currentTrack.name}\n      </li>\n      </ul>  */}\n      <button onClick={()=> recentlyPlayedListHandler(currentTrack)}>\n        play\n      </button>\n        <li>\n        {recentlyPlayedList}\n        </li>\n    </div>\n  )\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}