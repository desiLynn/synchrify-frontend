{"ast":null,"code":"var _jsxFileName = \"/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Dashboard/index.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Dashboard = () => {\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/spotify/user/profile', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return userInfoHandler(data);\n    }).catch(err => {\n      return console.error(err);\n    });\n    fetch('http://127.0.0.1:8000/spotify/user/playing_track', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return currentlyListeningHandler(data.item);\n    }).catch(err => {\n      currentlyListeningHandler('');\n      return console.error(err);\n    });\n    fetch('http://127.0.0.1:8000/spotify/user/recent_tracks', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return recentlyPlayedListHandler(data.items);\n    }).catch(err => {\n      return console.error(err);\n    });\n    fetch('http://127.0.0.1:8000/spotify/user/top_tracks/limit=7', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return topTracksHandler(data.items);\n    }).catch(err => {\n      return console.error(err);\n    });\n  }, []);\n  const [userDisplayName, setUserDisplayName] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [currentlyListening, setCurrentlyListening] = useState([]);\n  const [recentlyPlayedList, setRecentlyPlayedList] = useState([]);\n\n  const userInfoHandler = props => {\n    setUserDisplayName(props.display_name + '\\'s ');\n  };\n\n  const currentlyListeningHandler = props => {\n    // FIXME: array with only 1 item\n    if (props === '') {// User is not listening to anything\n    } else {\n      setIsListening(true);\n      const array = [];\n      array.push({\n        id: 1,\n        value: props.artists[0].name + ' - ' + props.name\n      });\n      setCurrentlyListening(array.map(array => /*#__PURE__*/React.createElement(\"li\", {\n        key: array.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, array.value)));\n    }\n  };\n\n  const recentlyPlayedListHandler = props => {\n    const array = [];\n\n    for (let i = 0; i < props.length; i++) {\n      array.push({\n        id: i,\n        value: props[i].track.artists[0].name + ' - ' + props[i].track.name\n      });\n    }\n\n    setRecentlyPlayedList(array.map(array => /*#__PURE__*/React.createElement(\"li\", {\n      key: array.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, array.value))); // console.log(array);\n    // console.log(props);\n  };\n\n  const topTracksHandler = props => {\n    console.log(props);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, userDisplayName, \" Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, isListening && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Currently Playing\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, currentlyListening))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Recentyly Played\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, recentlyPlayedList)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, \"Top Tracks\")));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Dashboard/index.js"],"names":["React","useState","useEffect","Dashboard","fetch","method","credentials","then","resp","json","data","userInfoHandler","catch","err","console","error","currentlyListeningHandler","item","recentlyPlayedListHandler","items","topTracksHandler","userDisplayName","setUserDisplayName","isListening","setIsListening","currentlyListening","setCurrentlyListening","recentlyPlayedList","setRecentlyPlayedList","props","display_name","array","push","id","value","artists","name","map","i","length","track","log"],"mappings":"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","sourcesContent":["import React, { useState , useEffect }from \"react\";\n\nconst Dashboard = () => {\n  useEffect(() => { \n      fetch('http://127.0.0.1:8000/spotify/user/profile', {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        return userInfoHandler(data);\n      })\n      .catch((err) => {\n        return console.error(err);\n      })\n\n      fetch('http://127.0.0.1:8000/spotify/user/playing_track', {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        return currentlyListeningHandler(data.item);\n      })\n      .catch((err) => {\n        currentlyListeningHandler('');\n        return console.error(err);\n      })\n\n      fetch('http://127.0.0.1:8000/spotify/user/recent_tracks', {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        return recentlyPlayedListHandler(data.items);\n      })\n      .catch((err) => {\n        return console.error(err);\n      })\n\n      fetch('http://127.0.0.1:8000/spotify/user/top_tracks/limit=7', {\n        method: 'GET',\n        credentials: 'include',\n      })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((data) => {\n        return topTracksHandler(data.items);\n      })\n      .catch((err) => {\n        return console.error(err);\n      })\n  }, [])\n\n  const [userDisplayName, setUserDisplayName] = useState('');\n  \n  const [isListening, setIsListening] = useState(false);\n  const [currentlyListening, setCurrentlyListening] = useState([]);\n\n  const [recentlyPlayedList, setRecentlyPlayedList] = useState([]);\n\n  const userInfoHandler = (props) => {\n    setUserDisplayName(props.display_name + '\\'s ');\n  };\n\n  const currentlyListeningHandler = (props) => {\n    // FIXME: array with only 1 item\n    if (props === '') {\n      // User is not listening to anything\n    } else {\n      setIsListening(true);\n      const array = [];\n      array.push({\n        id: 1,\n        value: props.artists[0].name + ' - ' + props.name\n      });\n      setCurrentlyListening(array.map((array) => \n        <li key={array.id}>{array.value}</li>\n      ));\n    }\n  };\n\n  const recentlyPlayedListHandler = (props) => {\n    const array = [];\n    for (let i = 0; i < props.length; i++) {\n      array.push({\n        id: i,\n        value: props[i].track.artists[0].name + ' - ' + props[i].track.name\n      });\n    }\n    setRecentlyPlayedList(array.map((array) =>\n      <li key={array.id}>{array.value}</li>\n    ));\n    // console.log(array);\n    // console.log(props);\n  };\n  \n  const topTracksHandler = (props) => {\n    console.log(props);\n  };\n\n  return (\n    <div>\n      <h1>{userDisplayName} Dashboard</h1>\n\n      <div>\n        {isListening && \n          <div>\n          <h2>Currently Playing</h2>\n          <ul>\n            {currentlyListening}\n          </ul>\n          </div>\n        }\n      </div>\n\n      <div>\n        <h2>Recentyly Played</h2>\n        <ul>\n          {recentlyPlayedList}\n        </ul>\n      </div>\n\n      <div>\n        <h2>Top Tracks</h2>\n      </div>\n    </div>\n  )\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}