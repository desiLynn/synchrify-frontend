{"ast":null,"code":"var _jsxFileName = \"/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Ratings/index.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Ratings = () => {\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/ratings/list', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return ratingsListHandler(data);\n    }).catch(err => {\n      return console.error(err);\n    });\n  }, []); // const [fetchedContentInfo, setFetchedContentInfo] = useState([]);\n\n  let fetchedContentInfo = [];\n  const [ratingsList, setRatingsList] = useState([]);\n\n  const ratingsListHandler = props => {\n    //console.log('Ratings Handler');\n    //console.log(props);\n    const array = []; //console.log(props.ratings.length);\n\n    for (let i = props.ratings.length - 1; i >= 0; i--) {\n      fetch('http://127.0.0.1:8000/content/' + props.ratings[i].content_id, {\n        method: 'GET',\n        credentials: 'include'\n      }).then(resp => {\n        return resp.json();\n      }).then(data => {\n        console.log(data);\n        array.push({\n          id: i,\n          name: data.name\n        });\n      });\n    }\n\n    console.log(array);\n    setRatingsList(array.map(array => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: array.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, array.name);\n    }));\n  }; // const fetchRatingsInfoHandler = (content_id) => {\n  //     fetch('http://127.0.0.1:8000/content/'+content_id, {\n  //         method: 'GET',\n  //         credentials: 'include',\n  //     })\n  //     .then((resp) => {\n  //         return resp.json();\n  //     })\n  //     .then((data) => {\n  //         console.log('Info Handler');\n  //         console.log(data);\n  //         fetchedContentInfo = data;\n  //         // console.log(fetchedContentInfo);\n  //         return data;\n  //     })\n  //     .catch((err) => {\n  //         return console.error(err);\n  //     })\n  // }\n  // async function ratingsListHandler(props) {\n  //     //console.log('Ratings Handler');\n  //     //console.log(props);\n  //     const array = [];\n  //     //console.log(props.ratings.length);\n  //     for (let i = (props.ratings.length - 1); i >= 0; i--) {\n  //         fetchRatingsInfoHandler(props.ratings[i].content_id);\n  //         console.log('inside ratingsListHandler:');\n  //         console.log(fetchedContentInfo);\n  //         array.push({\n  //             id: i,\n  //             name: fetchedContentInfo.name\n  //         });\n  //         console.log(array);\n  //     }\n  //     setRatingsList(array.map((array) => {\n  //         return (\n  //             <li key={array.id}>\n  //                 {array.name}\n  //             </li>\n  //         );\n  //     }))\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Ratings\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Track ratings:\"), ratingsList));\n};\n\nexport default Ratings;","map":{"version":3,"sources":["/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Ratings/index.js"],"names":["React","useState","useEffect","Ratings","fetch","method","credentials","then","resp","json","data","ratingsListHandler","catch","err","console","error","fetchedContentInfo","ratingsList","setRatingsList","props","array","i","ratings","length","content_id","log","push","id","name","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClBD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AACxCC,MAAAA,MAAM,EAAE,KADgC;AAExCC,MAAAA,WAAW,EAAE;AAF2B,KAAvC,CAAL,CAICC,IAJD,CAIOC,IAAD,IAAU;AACZ,aAAOA,IAAI,CAACC,IAAL,EAAP;AACH,KAND,EAOCF,IAPD,CAOOG,IAAD,IAAU;AACZ,aAAOC,kBAAkB,CAACD,IAAD,CAAzB;AACH,KATD,EAUCE,KAVD,CAUQC,GAAD,IAAS;AACZ,aAAOC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAP;AACH,KAZD;AAaH,GAdQ,EAcN,EAdM,CAAT,CADkB,CAiBlB;;AACA,MAAIG,kBAAkB,GAAG,EAAzB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMU,kBAAkB,GAAIQ,KAAD,IAAW;AAClC;AACA;AACA,UAAMC,KAAK,GAAG,EAAd,CAHkC,CAIlC;;AACA,SAAK,IAAIC,CAAC,GAAIF,KAAK,CAACG,OAAN,CAAcC,MAAd,GAAuB,CAArC,EAAyCF,CAAC,IAAI,CAA9C,EAAiDA,CAAC,EAAlD,EAAsD;AAClDjB,MAAAA,KAAK,CAAC,mCAAiCe,KAAK,CAACG,OAAN,CAAcD,CAAd,EAAiBG,UAAnD,EAA+D;AAChEnB,QAAAA,MAAM,EAAE,KADwD;AAEhEC,QAAAA,WAAW,EAAE;AAFmD,OAA/D,CAAL,CAICC,IAJD,CAIOC,IAAD,IAAU;AACZ,eAAOA,IAAI,CAACC,IAAL,EAAP;AACH,OAND,EAOCF,IAPD,CAOOG,IAAD,IAAS;AACXI,QAAAA,OAAO,CAACW,GAAR,CAAYf,IAAZ;AACAU,QAAAA,KAAK,CAACM,IAAN,CAAW;AACPC,UAAAA,EAAE,EAAEN,CADG;AAEPO,UAAAA,IAAI,EAAElB,IAAI,CAACkB;AAFJ,SAAX;AAIH,OAbD;AAcH;;AACDd,IAAAA,OAAO,CAACW,GAAR,CAAYL,KAAZ;AACAF,IAAAA,cAAc,CAACE,KAAK,CAACS,GAAN,CAAWT,KAAD,IAAW;AAChC,0BACI;AAAI,QAAA,GAAG,EAAEA,KAAK,CAACO,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,KAAK,CAACQ,IADX,CADJ;AAKH,KANc,CAAD,CAAd;AAOH,GA7BD,CArBkB,CAoDlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKX,WAFL,CAFJ,CADJ;AASH,CAzGD;;AA2GA,eAAed,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Ratings = () => {\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/ratings/list', {\n            method: 'GET',\n            credentials: 'include',\n        })\n        .then((resp) => {\n            return resp.json();\n        })\n        .then((data) => {\n            return ratingsListHandler(data);\n        })\n        .catch((err) => {\n            return console.error(err);\n        })\n    }, []);\n\n    // const [fetchedContentInfo, setFetchedContentInfo] = useState([]);\n    let fetchedContentInfo = [];\n    const [ratingsList, setRatingsList] = useState([]);\n\n    const ratingsListHandler = (props) => {\n        //console.log('Ratings Handler');\n        //console.log(props);\n        const array = [];\n        //console.log(props.ratings.length);\n        for (let i = (props.ratings.length - 1); i >= 0; i--) {\n            fetch('http://127.0.0.1:8000/content/'+props.ratings[i].content_id, {\n                method: 'GET',\n                credentials: 'include',\n            })\n            .then((resp) => {\n                return resp.json();\n            })\n            .then((data)=> {\n                console.log(data);\n                array.push({\n                    id: i,\n                    name: data.name\n                });\n            })\n        }\n        console.log(array);\n        setRatingsList(array.map((array) => {\n            return (\n                <li key={array.id}>\n                    {array.name}\n                </li>\n            );\n        }))\n    }\n\n    // const fetchRatingsInfoHandler = (content_id) => {\n    //     fetch('http://127.0.0.1:8000/content/'+content_id, {\n    //         method: 'GET',\n    //         credentials: 'include',\n    //     })\n    //     .then((resp) => {\n    //         return resp.json();\n    //     })\n    //     .then((data) => {\n    //         console.log('Info Handler');\n    //         console.log(data);\n    //         fetchedContentInfo = data;\n    //         // console.log(fetchedContentInfo);\n    //         return data;\n    //     })\n    //     .catch((err) => {\n    //         return console.error(err);\n    //     })\n    // }\n\n    // async function ratingsListHandler(props) {\n    //     //console.log('Ratings Handler');\n    //     //console.log(props);\n    //     const array = [];\n    //     //console.log(props.ratings.length);\n    //     for (let i = (props.ratings.length - 1); i >= 0; i--) {\n    //         fetchRatingsInfoHandler(props.ratings[i].content_id);\n    //         console.log('inside ratingsListHandler:');\n    //         console.log(fetchedContentInfo);\n    //         array.push({\n    //             id: i,\n    //             name: fetchedContentInfo.name\n    //         });\n    //         console.log(array);\n    //     }\n    //     setRatingsList(array.map((array) => {\n    //         return (\n    //             <li key={array.id}>\n    //                 {array.name}\n    //             </li>\n    //         );\n    //     }))\n    // };\n\n    return (\n        <div>\n            <h1>Ratings</h1>\n            <div>\n                <h2>Track ratings:</h2>\n                {ratingsList}\n            </div>\n        </div>\n    );\n};\n\nexport default Ratings;"]},"metadata":{},"sourceType":"module"}