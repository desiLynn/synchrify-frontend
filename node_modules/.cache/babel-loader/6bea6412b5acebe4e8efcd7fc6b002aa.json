{"ast":null,"code":"var _jsxFileName = \"/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Ratings/index.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Ratings = () => {\n  const [ratingsList, setRatingsList] = useState([]);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/ratings/list', {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return ratingsListHandler(data);\n    }).catch(err => {\n      return console.error(err);\n    });\n  }, []);\n  const [contentInfo, setContentInfo] = useState([]);\n\n  const getContentInfoHandler = props => {\n    let trackUri = '';\n    fetch('http://127.0.0.1:8000/content/' + props, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      return trackUri = data.uri;\n    }).catch(err => {\n      return console.error(err);\n    });\n    fetch('http://127.0.0.1:8000/spotify/user/fetch_tracks?tracks=' + trackUri, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(resp => {\n      return resp.json();\n    }).then(data => {\n      console.log(data);\n      return setContentInfo(data);\n    }).catch(err => {\n      return console.error(err);\n    });\n  };\n\n  const ratingsListHandler = props => {\n    console.log(props.ratings[0]);\n\n    if (props.ratings.length === 0) {// User has no ratings;\n    } else {\n      const array = [];\n      const k = props.ratings.length - 1;\n\n      for (let i = k; i >= 0; i--) {\n        array.push({\n          content_id: props.ratings[i].content_id,\n          rating: props.ratings[i].rating,\n          id: k - i\n        });\n      }\n\n      console.log(array);\n      setRatingsList(array.map(array => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: array.id,\n          onClick: getContentInfoHandler.bind(getContentInfoHandler, array.content_id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }\n        }, \"Rating: \", array.rating);\n      }));\n    }\n\n    console.log(ratingsList);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Ratings\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Track ratings:\"), ratingsList));\n};\n\nexport default Ratings;","map":{"version":3,"sources":["/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/pages/Ratings/index.js"],"names":["React","useState","useEffect","Ratings","ratingsList","setRatingsList","fetch","method","credentials","then","resp","json","data","ratingsListHandler","catch","err","console","error","contentInfo","setContentInfo","getContentInfoHandler","props","trackUri","uri","log","ratings","length","array","k","i","push","content_id","rating","id","map","bind"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Ratings = () => {\n    const [ratingsList, setRatingsList] = useState([]);\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/ratings/list', {\n            method: 'GET',\n            credentials: 'include',\n        })\n        .then((resp) => {\n            return resp.json();\n        })\n        .then((data) => {\n            return ratingsListHandler(data);\n        })\n        .catch((err) => {\n            return console.error(err);\n        })\n    }, []);\n\n    const [contentInfo, setContentInfo] = useState([]);\n    const getContentInfoHandler = (props) => {\n        let trackUri = '';\n        fetch('http://127.0.0.1:8000/content/'+props, {\n            method: 'GET',\n            credentials: 'include',\n        })\n        .then((resp) => {\n            return resp.json();\n        })\n        .then((data) => {\n            return trackUri = data.uri;\n        })\n        .catch((err) => {\n            return console.error(err);\n        })\n\n        fetch('http://127.0.0.1:8000/spotify/user/fetch_tracks?tracks='+trackUri, {\n            method: 'GET',\n            credentials: 'include',\n        })\n        .then((resp) => {\n            return resp.json();\n        })\n        .then((data) => {\n            console.log(data);\n            return setContentInfo(data);\n        })\n        .catch((err) => {\n            return console.error(err);\n        })\n\n    }\n\n    const ratingsListHandler = (props) => {\n        console.log(props.ratings[0]);\n        if (props.ratings.length === 0) {\n            // User has no ratings;\n        } else {\n            const array = [];\n            const k = props.ratings.length - 1;\n            for (let i = k; i >= 0; i--) {\n                array.push({\n                    content_id: props.ratings[i].content_id,\n                    rating: props.ratings[i].rating,\n                    id: (k - i)\n                });\n            }\n            console.log(array);   \n            setRatingsList(array.map((array) => {\n                return (\n                    <li key={array.id} onClick={getContentInfoHandler.bind(getContentInfoHandler, array.content_id)}>\n                        Rating: {array.rating}\n                    </li>\n                );\n            }))\n        }\n        console.log(ratingsList);\n    };\n\n    return (\n        <div>\n            <h1>Ratings</h1>\n            <div>\n                <h2>Track ratings:</h2>\n                {ratingsList}\n            </div>\n        </div>\n    );\n};\n\nexport default Ratings;"]},"metadata":{},"sourceType":"module"}