{"ast":null,"code":"/* import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const signed = true;\n\n  \n   * Redirect user to SignIn page if he tries to access a private route\n   * without authentication.\n   \n  if (isPrivate && !signed) {\n    return <Redirect to=\"/\" />;\n  }\n\n   * Redirect user to Main page if he tries to access a non private route\n   * (SignIn or SignUp) after being authenticated.\n  \n  if (!isPrivate && signed) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  \n   * If not included on both previous cases, redirect user to the desired route.\n   \n  return (\n    <Route\n      {...rest}\n      render={props => (\n          <Component {...props} />\n      )}\n    />\n    \n  );\n  \n}\n/*\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\n\nRouteWrapper.defaultProps = {\n  isPrivate: true //final is true\n};\n*/","map":{"version":3,"sources":["/Users/icdoleo/HDocuments/dev/synchrify-frontend/src/routes/Routes.js"],"names":[],"mappings":"AAAA","sourcesContent":["/* import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const signed = true;\n\n  \n   * Redirect user to SignIn page if he tries to access a private route\n   * without authentication.\n   \n  if (isPrivate && !signed) {\n    return <Redirect to=\"/\" />;\n  }\n\n   * Redirect user to Main page if he tries to access a non private route\n   * (SignIn or SignUp) after being authenticated.\n  \n  if (!isPrivate && signed) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  \n   * If not included on both previous cases, redirect user to the desired route.\n   \n  return (\n    <Route\n      {...rest}\n      render={props => (\n          <Component {...props} />\n      )}\n    />\n    \n  );\n  \n}\n/*\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\n\nRouteWrapper.defaultProps = {\n  isPrivate: true //final is true\n};\n*/\n"]},"metadata":{},"sourceType":"module"}